<?php
error_reporting(E_ALL);
ini_set("display_errors", 1);

/**
 * @file
 * ubl_access_rights_from_metadata
 */

/**
 * Implements hook_detail_tools_block_view().
 * This hook is used inside the templates to display the detail tools block with buttons.
 */
function ubl_access_rights_from_metadata_detail_tools_block_view() {
  $block = array();

  module_load_include('inc', 'islandora', 'includes/utilities');
  module_load_include('inc', 'ubl_access_rights_from_metadata', 'includes/ui');
  
  if (arg(1) == 'object' && islandora_is_valid_pid(arg(2))) {
    drupal_add_css(drupal_get_path('module', 'ubl_access_rights_from_metadata') . '/css/ubl_details_tools.css');
    drupal_add_js(drupal_get_path('module', 'ubl_access_rights_from_metadata') . '/js/ubl_details_tools.js');

    $obj = islandora_object_load(arg(2));

    // List of downloadable datastreams.
    $units = array( 'bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');
    $url = current_path();
    $dsids = ubl_access_rights_from_metadata_downloadable_dsids($obj);
    $additional = '';
    $hasfiles = FALSE;
    $additional .= '<h3>Download</h3>';
    if (count($dsids) > 0) { 
      $additional .= '<table class="download"><tbody>';
      foreach ($dsids as $dsid) {
        if (isset($obj[$dsid])) {
          $hasfiles = TRUE;
          $url = url('islandora/object/'.$obj->id.'/datastream/'.$dsid.'/download');
          $size = $obj[$dsid]->size;
          $label = $obj[$dsid]->label;
          $power = $size > 0 ? floor(log($size, 1024)) : 0;
          $size = number_format($size / pow(1024, $power), ($power > 0)?1:0) . ' ' . $units[$power];
          $additional .= "<tr data-download=\"$url\"><td>$label</td><td>$size</td></tr>";
        }
      }
      $additional .= '</tbody></table>';
    }
    if (!$hasfiles) {
      $additional .= '<DIV>' . t('No downloads accessible.') . '</DIV>';
    }

    // Describe the access rights.
    $access = ubl_access_rights_from_metadata_access_description($obj);
    if ($access && count($access) > 0) {
      $additional .= '<TABLE class="access">';
      $additional .= '<TBODY>';
      if (isset($access['accesstext']) && strlen($access['accesstext']) > 0) { 
        $additional .= '<TR><TH class="accesstitle">'.t('Restriction on access').'</TH></TR>';
        $additional .= '<TR><TD class="accesscontent">'.$access['accesstext'].'</TD></TR>';
      }
      if ((isset($access['accessimage']) && strlen($access['accessimage']) > 0) || (isset($access['accessusetext']) && strlen($access['accessusetext']) > 0)) { 
        $additional .= '<TR><TH class="usetitle">'.t('Use and reproduction').'</TH></TR><TR>';
        $additional .= '<TD class="usecontent">';
        if (isset($access['accessusetext'])) {
          $additional .= $access['accessusetext'];
        }
        if (isset($access['accesslink']) && strlen($access['accesslink']) > 0) {
          $additional .= '<a href="'.$access['accesslink'].'" target="_blank">';
        }
        $additional .= '<BR/><img class="accessimage" src="'.$access['accessimage'].'">';
        if (isset($access['accesslink'])) {
          $additional .= '</a>';
        }
        $additional .= '</TD></TR>';
      }
      $additional .= '</TBODY></TABLE>';
    }
    $additional = '<DIV class="menu">' . $additional . '</DIV>';

    $additional = '<DIV class="download-additional">' . $additional . '</DIV>';

    // Put this in a item list.
    $block['list'] = array(
      '#type' => 'ul',
      '#attributes' => array('class' => array('dc-detail-tools', 'ubl-detail-tools')),
      '#items' => array(
        array(
          'data' => l(
                      '<span>download</span><i class="fa fa-download" aria-hidden="true"></i>',
                      $url,
                      array('attributes' => array('title' => 'download'),'html' => TRUE)
                    ), 
        ),
      ),
      '#theme' => 'item_list',
    );
    $block['downloadadditional'] = array(
      '#type' => 'markup',
      '#markup' => $additional,
    );
  }
  return $block;
}

/**
 * Implements hook_islandora_datastream_access()
 **/
function ubl_access_rights_from_metadata_islandora_datastream_access($op, $islandora_datastream, $user) {
  module_load_include('inc', 'ubl_access_rights_from_metadata', 'includes/ui');
  module_load_include('inc', 'ubl_access_rights_from_metadata', 'includes/config');

  $obj = $islandora_datastream->parent;
  $dsid = $islandora_datastream->id;

  if (ubl_access_rights_from_metadata_is_request_from_server($obj)) {
    // this is a request from an Islandora server, so let someone else handle the access.
    return NULL;
  }

  // First check if user is allowed access.
  $allowedroles = ubl_access_rights_from_metadata_allowed_roles($obj);
  if ($allowedroles && is_array($allowedroles)) {
    foreach ($allowedroles as $allowedrole) {
      $role = user_role_load_by_name($allowedrole);
      if ($role) {
        if (user_has_role($role->rid, $user)) {
          // User has access, but let someone else figure out exactly how much.
          return NULL;
        }
      }
    }
  }

  // Check if the datastream is restricted.
  $restricted = ubl_access_rights_from_metadata_restricted_dsids($obj);
  if (in_array($dsid, $restricted)) {
    // This datastream is restricted and cannot be accessed.
    return FALSE;
  }
  
  // Check if the datastream is allowed.
  $allowed = ubl_access_rights_from_metadata_accessible_dsids($obj); 
  if (in_array($dsid, $allowed)) {
    // This datastream is allowed and can be accessed.
    return TRUE;
  }

  // We don't know if this datastream is allowed or restricted, so let someone else handle it.
  return NULL;
}


/**
 * Implements hook_islandora_datastream_modified().
 **/
function ubl_access_rights_from_metadata_islandora_datastream_modified(AbstractObject $object, AbstractDatastream $datastream) {
  if ($object && $datastream) {
    module_load_include('inc', 'ubl_access_rights_from_metadata', 'includes/config');

    $config = ubl_access_rights_from_metadata_get_configuration(array('object' => $object));
    if (isset($config['_config']['rightssource']['dsid']) && $datastream->id === $config['_config']['rightssource']['dsid']) {
      module_load_include('inc', 'ubl_access_rights_from_metadata', 'includes/xacml');
      module_load_include('inc', 'ubl_access_rights_from_metadata', 'includes/access_rights_value');
     
      // Get the new access rights value and refresh the cache for this object.
      $accessvalue = ubl_access_rights_from_metadata_get_access_rights_value($object, $config, TRUE);
      // Set XACML rights according to configuration.
      ubl_access_rights_from_metadata_xacml_modify_if_needed($object, $config);
    }
  }
}

/**
 * Implements hook_flush_caches().
 */
function ubl_access_rights_from_metadata_flush_caches() {
  return array('cache_ubl_access_rights_from_metadata_config','cache_ubl_access_rights_from_metadata_access_rights_value');
}
